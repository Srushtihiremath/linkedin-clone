main.js:

import {getArticlesAPI} from "../actions";
import styled from "styled-components";
import PostModal from "./PostModal";
import { useEffect,useState } from "react";
import { connect } from "react-redux";
const Main = (props) => {
    const [showModal, setShowModal] = useState("close");
    useEffect(() => {
        props.getArticles();
    }, []);
    
    const handleClick = (e) => {
        e.preventDefault();
        if (e.target !== e.currentTarget) {  // Added 'if'
            return;
        }
        switch (showModal) {
            case "open":
                setShowModal("close");
                break;
            case "close":
                setShowModal("open");
                break;
            default:
                setShowModal("close");
                break;
        }
    
    };
    

        
  return (
    <>
    
    <Container>
    <ShareBox>
        <div>
            {props.user && props.user.photoURL ? (
                <img src={props.user.photoURL} />
            ) : (
                <img src="/images/user.svg" alt="" />
            )}
            <button onClick={handleClick} disabled={props.loading ? true :false}>
                Start a post
                </button>
         </div>
         <div>
        <button>
            <img src="/images/photo-icon.svg" alt="" />
            <span>Photo</span>
        </button>

        <button>
            <img src="/images/video-icon.svg" alt="" />
            <span>Video</span>
        </button>

        <button>
            <img src="/images/event-icon.svg" alt="" />
            <span>Event</span>
        </button>

        <button>
            <img src="/images/widget-icon.svg" alt="" />
            <span>Write article</span>
        </button>
        </div> 
    </ShareBox> 
    <Content>
        {
            props.loading && <img src="/images/load.svg"/>
        }
    
        
        <Article >
            <SharedActor>
                <a>
                    <img src="/images/user.svg" alt="" />
                    <div>
                        <span>Title</span>
                        <span>Info</span>
                        <span>Date</span>
                    </div>
                </a>
                <button>
                    <img src="/images/ellipse.svg" alt="" />
                </button>
            </SharedActor>

            <Description>Description</Description>

            <SharedImg>
                <a>
                    <img src="/images/shared1.jpg" alt="" />
                </a>
            </SharedImg>

            <SocialCount>
                <li>
                    <button>
                        <img src="https://static-exp1.licdn.com/sc/h/d310t2g24pvdy4pt1jkedo4yb" alt="" />
                        <img src="https://static-exp1.licdn.com/sc/h/5thsbmikm6a8uov24ygwd914f" alt="" />
                        <span>75</span>
                    </button>
                </li>
                <li>
                    <a>2 comments</a>
                </li>
            </SocialCount>

            <SocialAction>
                <button>
                    <img src="/images/like.png" alt="" />
                    <span>Like</span>
                </button>

                <button>
                    <img src="/images/comment.png" alt="" />
                    <span>Comment</span>
                </button>

                <button>
                    <img src="/images/share.png" alt="" />
                    <span>Share</span>
                </button>

                <button>
                    <img src="/images/send.png" alt="" />
                    <span>Send</span>
                </button>
            </SocialAction>
        </Article>
        
        </Content>

    <PostModal showModal={showModal} handleClick={handleClick}postArticle={props.postArticle} />
</Container>


</>
)};

const Container = styled.div`
  grid-area: main;
`;
const CommonCard = styled.div`
    text-align: center;
    overflow: hidden;
    margin-bottom:;
    background-color:#fff
    border-radius: 5px;
    position:relative;
    border:none;
    box-shadow: 0 0 0 1px rgb(0 0 0 /15%),0 0 0 rgb(0 0 0 /20%)
`;
const ShareBox = styled(CommonCard)`
  display: flex;
  flex-direction: column;
  color:#958b7b;
  margin:0 0 8px;
  background:white;
  
  
  
    
  div {
    button {
        border:none;
        display:flex;
        align-items:center;
        font-weight:600;
        background:transparent;
    }
    
    button img {
        outline : none;
        color: rgba(0, 0, 0, 0.6);
        font-size:14px;
        line-height:1.5;
        min-height:48px;
        width:40px;
       
      }
    &:first-child {
        display:flex;
        align-items:center;
        padding:8px 16px 0px 16px;
        img {
            width:48px;
            border-radius:50%;
            margin-right:8px;
        }
        button {
            margin:4px 0;
            flex-grow:1;
            border-radius:35px;
            padding-left:16px;
            border:1px solid rgba(0, 0, 0, 0.15);
            background-color:white;
            text-align:left;
        }
    }
    &:nth-child(2){
        display:flex;
        flex-wrap:wrap;
        justify-content:space-around;
        padding-bottom:4px;

        button {
            img {
                margin:0 4px 0 -2px;
            }
            span {
                color:#70b5f9;
            }
        }
    }
    
    }
  
`;
const Article = styled (CommonCard)`
    padding:0;
    margin:0 0 8px;
    overflow: visible;
`;
const SharedActor = styled.div`
    padding-right:40px;
    flex-wrap: nowrap;
    padding: 12px 16px 0;
    margin-bottom: 8px;
    align-items:center;
    display:flex;
    a {
        margin-right:12px;
        flex-grow:1;
        overflow: hidden;
        display: flex;
        text-decoration: none;

        img {
            width:48px;
            height:48px;
        }
        & > div {
            display: flex;
            flex-direction: column;
            flex-grow:1;
            flex-basis: 0;
            margin-left:8px;
            overflow:hidden;
            span{
                text-align:left;
                &:first-child{
                    font-size: 14px;
                    font-weight: 700;
                    color: rgba(0, 0, 0, 1);
                }
                &:nth-child(n+1){
                    font-size:12px;
                    color:rgba(0, 0, 0, 0.6);
                     }
                 }       
             }
       
         }
        button {
            position: absolute;
            right:12px;
            top:0;
            background: transparent;
            border:none;
            outline:none;
        }
    button img {
        width:20px;
    }
`;
  
 const Description = styled.div`
   padding:0 16px;
   overflow: hidden;
   color: rgba(0, 0, 0, 0.9);
   font-size:14px;
   text-align: left;
`;
const SharedImg = styled.div`
    margin-top:8px;
    width:100%;
    display:block;
    position:relative;
    background-color:#f9fafb;
    img{
        object-fit:contain;
        width:100%;
        height:100%;
    }
`;
const SocialCount = styled.ul`
  line-height:1.3;
  display:flex;
  align-items:flex-start;
  overflow:auto;
  margin: 0 16px;
  padding:8px 0;
  border-bottom:1px solid #e9e5df;
  list-style:none;
  li{
    margin-right:5px;
    font-size:12px;
    button {
        display:flex;
    }
  }

`;
const SocialAction = styled.div`
align-items:center;
  display:flex;
  justify-content: flex-start;
  margin:0;
  min-height:40px;
  padding: 4px 8px;
button img {
    width:30px;
}
button {
    display:inline-flex;
    align-items:center;
    padding:8px;
    color:#0a66c2;

   
  }
  media (min-width:768px)
  span {
      margin-left:8px;

  }
`;

const Content = styled.div`
  text-align:center;
  & > img{
    width:30px;
  }
`;
const mapStateToProps = (state) => {
  return {
    loading: state.articleState.loading,
    user: state.userState.user,
    articles: state.articleState.article || [],
  };
};

const mapDispatchToProps = (dispatch) => ({
    getArticles: () => dispatch(getArticlesAPI()),
    });

export default connect(mapStateToProps, mapDispatchToProps)(Main);

















    
login.js

import styled from "styled-components";
import { connect } from "react-redux";
import {signInAPI } from "../actions";
import { Navigate } from "react-router";
import { signInWithGoogle } from '../firebase';
import { useEffect } from 'react';
import { handleAuthRedirect } from '../firebase';

const Login = (props) => {
  useEffect(() => {
    // Check for redirect result when component mounts
    handleAuthRedirect();
  }, []);

  return (
    <Container>
      {props.user && < Navigate to='/home' />}

      
      <Nav>
        <a href="/">
          <img src="/images/login-logo.svg" alt="" />
        </a>
        <div>
          <Join>Join now</Join>
          <SignIn onClick={signInWithGoogle}>Sign in</SignIn>
        </div>
      </Nav>
      <Section>
        <Hero>
          <h1>Welcome to your professional community</h1>
          <img src="/images/login-hero.svg" alt="" />
        </Hero>
      </Section>
    </Container>
  );
};

const Container = styled.div`
  padding: 0px;

`;

const Nav = styled.nav`
  max-width: 1128px;
  margin: auto;
  padding: 12px 0 16px;
  display: flex;
  align-items: center;
  position: relative;
  justify-content: space-between;
  flex-wrap: nowrap;

  & > a {
    width: 135px;
    height: 34px;
    @media (max-width: 768px) {
      padding: 0 5px;
    }
  }
`;

const Join = styled.a`
  font-size: 16px;
  padding: 10px 12px;
  text-decoration: none;
  border-radius: 4px;
  color: rgba(0, 0, 0, 0.6);
  margin-right: 12px;
  &:hover {
    background-color: rgba(0, 0, 0, 0.08);
    color: rgba(0, 0, 0, 0.9);
    text-decoration: none;
  }
`;

const SignIn = styled.a`
  box-shadow: inset 0 0 0 1px #0a66c2;
  color: #0a66c2;
  border-radius: 24px;
  transition-duration: 167ms;
  font-size: 16px;
  font-weight: 600;
  line-height: 40px;
  padding: 10px 24px;
  text-align: center;
  background-color: rgba(0, 0, 0, 0);
  &:hover {
    background-color: rgba(112, 181, 249, 0.15);
    color: #0a66c2;
    text-decoration: none;
  }
`;

const Section = styled.section`
  display: flex;
  align-content: start;
  min-height: 700px;
  padding-bottom: 138px;
  padding-top: 40px;
  padding: 60px 0;
  position: relative;
  flex-wrap: wrap;
  width: 100%;
  max-width: 1128px;
  align-items: center;
  margin: auto;

  @media (max-width: 768px) {
    margin: auto;
    min-height: 0px;
  }
`;

const Hero = styled.div`
  width: 100%;
  h1 {
    padding-bottom: 0;
    width: 55%;
    font-size: 56px;
    color: #2977c9;
    font-weight: 200;
    line-height: 70px;
    @media (max-width: 768px) {
      text-align: center;
      font-size: 20px;
      width: 100%;
      line-height: 2;
    }
  }

  img {
    /* z-index: -1; */
    width: 700px;
    height: 670px;
    position: absolute;
    bottom: -2px;
    right: -150px;
    @media (max-width: 768px) {
      top: 230px;
      width: initial;
      position: initial;
      height: initial;
    }
  }
`;

const Form = styled.div`
  margin-top: 100px;
  width: 408px;
  @media (max-width: 768px) {
    margin-top: 20px;
  }
`;

const Google = styled.button`
  display: flex;
  justify-content: center;
  background-color: #fff;
  align-items: center;
  height: 56px;
  width: 100%;
  border-radius: 28px;
  box-shadow: inset 0 0 0 1px rgb(0 0 0 / 60%),
    inset 0 0 0 2px rgb(0 0 0 / 0%) inset 0 0 0 1px rgb(0 0 0 / 0);

  vertical-align: middle;
  z-index: 0;
  transition-duration: 167ms;
  font-size: 20px;
  color: rgba(0, 0, 0, 0.6);
  
  &:hover {
    background-color: rgba(207, 207, 207, 0.25);
    color: rgba(0, 0, 0, 0.75);
  }
`;

const signIn = () => {
  signInWithRedirect(auth, provider)
    .catch((error) => {
      console.error("Error signing in: ", error);
    });
};

const mapStateToProp = (state) => {
  return {
    user: state.userState.user,
  };
};

const mapDisplayToProps = (dispatch) => ({
  signIn: () => dispatch(signInAPI()),
});

export default connect(mapStateToProp, mapDisplayToProps)(Login);
    
